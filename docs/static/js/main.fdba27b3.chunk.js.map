{"version":3,"sources":["engine/camera.tsx","engine/entity.tsx","engine/game.tsx","engine/renderers.tsx","engine/scene.tsx","engine/engine.tsx","component/animation/engine.ts","Lifecycle.tsx","Loop.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Cameras","WorldToCameraCoords","pos","cam","x","position","y","CenterCameraOnVector2","size","width","height","entityID","Entities","MakeEntity","props","components","render","shaders","uuid","String","properties","GetEntityOrigin","es","e","origin","config","scale","Error","GetEntityBBOrigin","newOriginPos","eBB","ComputeEntityBoundingBox","minXminY","maxXmaxY","minXmaxY","MakeFolderEntity","state","entities","bounds","map","minX","reduce","pr","cu","minY","maxX","maxY","rotation","vals","a","Vec2","Sub","MathUtil","RotatePositionAboutPoint","Add","Mul","Math","PI","pointsToConsider","maxXminY","Games","TickActiveScene","delta","newState","activeScene","newActiveScene","finComp","c","pe","pns","update","scenes","s","InitEngine","canvas","window","innerWidth","innerHeight","StyleConversions","CreateRotation","amt","CreateScale","CreateTransform","transformations","prev","curr","ComputeEntityWorldTransformation","entityOrigin","translation","TransformationToStyle","t","left","bottom","transform","Renderers","BasicTextureRendererReact","tranformation","transformStyle","src","url","alt","style","BoxRendererReact","background","Colors","ColorToString","BasicTextureRenderer","transformation","BoxRenderer","at","ctx","getContext","save","fillStyle","translate","rotate","rect","fill","restore","Scenes","CreateScene","sceneID","setActive","newScene","concat","ActivateScene","find","undefined","AddEntityToScene","foundScene","changedScene","RemoveEntityFromScene","filter","et","Rengine","Camera","Entity","Game","Renderer","Scene","StyleConversion","v1","v2","Div","Neg","r","g","b","rad","about","cos","sin","run","rise","AnimationEngine","OffsetAnimationComponent","xFunc","yFunc","beforeUpdate","afterUpdate","d","ps","PositionAnimationComponent","baseEntity","init","engineState","newEnt","pow","timePassed","memo","console","log","EndGameLoop","ANIMATION_FRAME","LAST_UPDATE","cbs","Set","cb","this","add","forEach","delete","StartGameLoop","animFrameBefore","DoFrame","requestAnimationFrame","cancelAnimationFrame","lastState","currTimeMs","Date","now","newState2","canvasStyle","top","GameCanvas","canvasRef","useRef","useEffect","current","beginPath","fillRect","stroke","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fdba27b3.chunk.js","sourcesContent":["export class Cameras {\n\n  static WorldToCameraCoords = (pos: Vector2, cam: Camera): Vector2 => {\n    return {\n      x: pos.x - cam.position.x,\n      y: pos.y - cam.position.y,\n    };\n  };\n  \n  static CenterCameraOnVector2 = (pos: Vector2, cam: Camera): Camera => {\n    return {\n      ...cam,\n      position: {\n        x: pos.x - cam.size.width / 2,\n        y: pos.y - cam.size.height / 2,\n      },\n    };\n  };\n  \n}","import React from 'react';\nimport { MathUtil, Vec2 } from \"./engine\";\n\nlet entityID: number = 0;\n\nexport class Entities {\n\n  static MakeEntity = (\n    props: EntityProps,\n    components: Component[],\n    render: Render,\n    shaders: Shader[]\n  ): Entity => {\n    entityID++;\n    return {\n      uuid: String(entityID),\n      properties: props,\n      components: components,\n      render: render,\n      shaders: shaders,\n    };\n  };\n\n  static GetEntityOrigin = (es: EngineState) => (e: Entity): Vector2 => {\n    let origin: Vector2;\n    if (es.config.origin === \"center\") {\n      origin = e.properties.position;\n    } else if (es.config.origin === \"topleft\") {\n      origin = {\n        x:\n          e.properties.position.x -\n          (e.properties.scale.x * e.properties.size.width) / 2,\n        y:\n          e.properties.position.y +\n          (e.properties.scale.y * e.properties.size.height) / 2,\n      };\n    } else if (es.config.origin === \"bottomleft\") {\n      origin = {\n        x:\n          e.properties.position.x -\n          (e.properties.scale.x * e.properties.size.width) / 2,\n        y:\n          e.properties.position.y -\n          (e.properties.scale.y * e.properties.size.height) / 2,\n      };\n    } else {\n      throw new Error(\"No such origin location option: \" + es.config.origin);\n    }\n    return origin;\n  };\n\n  static GetEntityBBOrigin = (es: EngineState) => (e: Entity): Vector2 => {\n    const eBB = Entities.ComputeEntityBoundingBox(es)(e);\n    let newOriginPos: Vector2;\n    if (es.config.origin === \"center\") {\n      newOriginPos = { x: (eBB.minXminY.x + eBB.maxXmaxY.x) / 2, y: (eBB.minXminY.y + eBB.maxXmaxY.y) / 2 };\n    } else if (es.config.origin === \"topleft\") {\n      newOriginPos = eBB.minXmaxY;\n    } else if (es.config.origin === \"bottomleft\") {\n      newOriginPos = eBB.minXminY;\n    } else {\n      throw new Error(\"No such origin location: \" + es.config.origin);\n    }\n    return newOriginPos;\n  }\n\n  static MakeFolderEntity = (state: EngineState) => (\n    entities: Entity[]\n  ): Entity => {\n    let bounds: BoundingBox[] = entities.map((e) =>\n      Entities.ComputeEntityBoundingBox(state)(e)\n    );\n    let minX = bounds.reduce((pr, cu) => {\n      if (cu.minXminY.x < pr.minXminY.x) {\n        return cu;\n      } else {\n        return pr;\n      }\n    }, bounds[0]).minXminY.x;\n    let minY = bounds.reduce((pr, cu) => {\n      if (cu.minXminY.y < pr.minXminY.y) {\n        return cu;\n      } else {\n        return pr;\n      }\n    }, bounds[0]).minXminY.y;\n    let maxX = bounds.reduce((pr, cu) => {\n      if (cu.maxXmaxY.x > pr.maxXmaxY.x) {\n        return cu;\n      } else {\n        return pr;\n      }\n    }, bounds[0]).maxXmaxY.x;\n    let maxY = bounds.reduce((pr, cu) => {\n      if (cu.maxXmaxY.y > pr.maxXmaxY.y) {\n        return cu;\n      } else {\n        return pr;\n      }\n    }, bounds[0]).maxXmaxY.y;\n    let newOriginPos: Vector2;\n    if (state.config.origin === \"center\") {\n      newOriginPos = { x: (minX + maxX) / 2, y: (minY + maxY) / 2 };\n    } else if (state.config.origin === \"topleft\") {\n      newOriginPos = { x: minX, y: maxY };\n    } else if (state.config.origin === \"bottomleft\") {\n      newOriginPos = { x: minX, y: minY };\n    } else {\n      throw new Error(\"No such origin location: \" + state.config.origin);\n    }\n    entityID++;\n    return {\n      uuid: String(entityID),\n      properties: {\n        position: newOriginPos,\n        scale: { x: 1, y: 1 },\n        rotation: 0,\n        size: { width: maxX - minX, height: maxY - minY },\n      },\n      components: [],\n      shaders: [],\n      render: (e) => {\n        let vals = entities.map((a) => { return { \n          ...a,\n          properties: {\n            ...a.properties,\n            position: Vec2.Sub(a.properties.position)(e.properties.position),\n          }\n        }\n      }).map((a) => {\n          return {\n            ...a,\n            properties: {\n              ...a.properties,\n              position: MathUtil.RotatePositionAboutPoint(e.properties.rotation)(Entities.GetEntityOrigin(state)(e))(Vec2.Add(a.properties.position)(e.properties.position)),\n              scale: Vec2.Mul(a.properties.scale)(e.properties.scale),\n              rotation: (a.properties.rotation + e.properties.rotation) % (2 * Math.PI),\n            }\n          };\n        }).map((a) => a.render(a));\n        return <>{vals}</>;\n      },\n    };\n  };\n\n  static ComputeEntityBoundingBox = (es: EngineState) => (\n    e: Entity\n  ): BoundingBox => {\n    let origin: Vector2 = Entities.GetEntityOrigin(es)(e);\n    let pointsToConsider: Vector2[] = [\n      {\n        x:\n          e.properties.position.x -\n          (e.properties.size.width * e.properties.scale.x) / 2,\n        y:\n          e.properties.position.y -\n          (e.properties.size.height * e.properties.scale.y) / 2,\n      },\n      {\n        x:\n          e.properties.position.x -\n          (e.properties.size.width * e.properties.scale.x) / 2,\n        y:\n          e.properties.position.y +\n          (e.properties.size.height * e.properties.scale.y) / 2,\n      },\n      {\n        x:\n          e.properties.position.x +\n          (e.properties.size.width * e.properties.scale.x) / 2,\n        y:\n          e.properties.position.y -\n          (e.properties.size.height * e.properties.scale.y) / 2,\n      },\n      {\n        x:\n          e.properties.position.x +\n          (e.properties.size.width * e.properties.scale.x) / 2,\n        y:\n          e.properties.position.y +\n          (e.properties.size.height * e.properties.scale.y) / 2,\n      },\n    ].map(MathUtil.RotatePositionAboutPoint(e.properties.rotation)(origin));\n  \n    let minX = pointsToConsider.reduce((pr, cu) => {\n      if (cu.x < pr.x) {\n        return cu;\n      } else {\n        return pr;\n      }\n    }, pointsToConsider[0]).x;\n    let minY = pointsToConsider.reduce((pr, cu) => {\n      if (cu.y < pr.y) {\n        return cu;\n      } else {\n        return pr;\n      }\n    }, pointsToConsider[0]).y;\n    let maxX = pointsToConsider.reduce((pr, cu) => {\n      if (cu.x > pr.x) {\n        return cu;\n      } else {\n        return pr;\n      }\n    }, pointsToConsider[0]).x;\n    let maxY = pointsToConsider.reduce((pr, cu) => {\n      if (cu.y > pr.y) {\n        return cu;\n      } else {\n        return pr;\n      }\n    }, pointsToConsider[0]).y;\n  \n    const bb: BoundingBox = {\n      minXminY: { x: minX, y: minY },\n      minXmaxY: { x: minX, y: maxY },\n      maxXminY: { x: maxX, y: minY },\n      maxXmaxY: { x: maxX, y: maxY },\n    };\n    return bb;\n  };\n\n}","// Overall engine-wide state transformations\nexport class Games {\n\n  static TickActiveScene = (state: EngineState) => (delta: number): EngineState => {\n    let newState = state;\n    if(newState.activeScene === null){\n      throw new Error('Cannot tick a null active scene!');\n    }\n    let newActiveScene = newState.activeScene;\n    newActiveScene.entities = newActiveScene.entities.map((e) => {\n      const finComp = e.components.reduce(([pe, pns], c) => {\n        return c.update(delta, pe, newActiveScene, pns);\n      }, [e, newState] as [Entity, EngineState]);\n      newState = finComp[1];\n      return finComp[0];\n    });\n    newState.activeScene = newActiveScene;\n    newState.scenes = newState.scenes.map((s) => {\n      if(s.uuid === newActiveScene.uuid){\n        return newActiveScene;\n      } else {\n        return s;\n      }\n    });\n    return newState;\n  };\n\n  static InitEngine = (config?: GlobalConfig, canvas?: HTMLCanvasElement): EngineState => {\n    return {\n      scenes: [],\n      activeScene: null,\n      config: config ?? { origin: 'center', width: window.innerWidth, height: window.innerHeight },\n      canvas: canvas ?? null\n    };\n  };\n}","import React from 'react';\nimport { Colors, MathUtil } from \"./engine\";\nimport { Entities } from './entity';\n\nexport class StyleConversions {\n\n  static CreateRotation = (amt: number) => () => 'rotate(' + amt + 'rad)';\n  static CreateScale = (s: Vector2) => () => 'scale(' + s.x + ',' + s.y + ')';\n\n  static CreateTransform = (transformations: (() => string)[]) => {\n    return transformations.reduce((prev, curr) => (prev + ' ' + curr()), '');\n  }\n\n  static ComputeEntityWorldTransformation = (es: EngineState) => (e: Entity): Transformation => {\n    const entityOrigin = Entities.GetEntityOrigin(es)(e);\n    const rotatedPoint = MathUtil.RotatePositionAboutPoint(e.properties.rotation)(entityOrigin)(e.properties.position);\n    const t: Transformation = {\n      translation: rotatedPoint,\n      scale: e.properties.scale,\n      rotation: e.properties.rotation\n    };\n    return t;\n  };\n\n  static TransformationToStyle = (es: EngineState) => (t: Transformation,\n    e: Entity\n  ): React.CSSProperties => {\n    return {\n      position: \"absolute\",\n      width: e.properties.size.width,\n      height: e.properties.size.height,\n      left:\n        (es.config.width / 2) + t.translation.x -\n        (t.scale.x * e.properties.size.width) / 2,\n      bottom:\n      (es.config.height / 2) + t.translation.y -\n        (t.scale.y * e.properties.size.height) / 2,\n      transform: StyleConversions.CreateTransform([StyleConversions.CreateScale(t.scale), StyleConversions.CreateRotation(t.rotation)]),\n    };\n  };\n\n}\n\nexport class Renderers {\n  static BasicTextureRendererReact = (es: EngineState) => (\n    t: Texture\n  ): Render => {\n    const renderFunc: Render = (e: Entity) => {\n      const tranformation = StyleConversions.ComputeEntityWorldTransformation(es)(e);\n      const transformStyle = StyleConversions.TransformationToStyle(es)(tranformation, e);\n      return <img src={t.url} alt={t.alt} style={transformStyle} />;\n    };\n    return renderFunc;\n  };\n  static BoxRendererReact = (es: EngineState) => (c: Color): Render => {\n    const renderFunc: Render = (e: Entity) => {\n      const tranformation = StyleConversions.ComputeEntityWorldTransformation(es)(e);\n      const transformStyle = StyleConversions.TransformationToStyle(es)(tranformation, e);\n      return (\n        <div\n          style={{ ...transformStyle, background: Colors.ColorToString(c) }}\n        />\n      );\n    };\n    return renderFunc;\n  };\n  static BasicTextureRenderer = (es: EngineState) => {\n    return ((\n    t: Texture\n  ): Render => {\n    if(es.canvas === null) throw new Error('Cannot render with a canvas renderer without a canvas being linked to the engine state!');\n    const renderFunc: Render = (e: Entity) => {\n      const transformation = StyleConversions.ComputeEntityWorldTransformation(es)(e);\n      const transformStyle = StyleConversions.TransformationToStyle(es)(transformation, e);\n      return <img src={t.url} alt={t.alt} style={transformStyle} />;\n    };\n    return renderFunc;\n    })\n  };\n  static BoxRenderer = (es: EngineState) => {\n    if(es.canvas === null) throw new Error('Cannot render with a canvas renderer without a canvas being linked to the engine state!');\n    return ((c: Color): Render => {\n      const renderFunc: Render = (e: Entity) => {\n        if(es.canvas === null) throw new Error('Cannot render with a canvas renderer without a canvas being linked to the engine state!');\n        const tranformation = StyleConversions.ComputeEntityWorldTransformation(es)(e);\n        const at: Transformation = {\n          ...tranformation,\n          translation: {\n            x: tranformation.translation.x - ((e.properties.size.width * tranformation.scale.x) / 2) + (es.config.width / 2),\n            y: es.config.height - (tranformation.translation.y - ((e.properties.size.height * tranformation.scale.y) / 2)) - (es.config.height / 2)\n          }\n        };\n        const ctx = es.canvas?.getContext('2d');\n        if(!ctx) throw new Error('Cannot get canvas context!');\n        ctx.save();\n        ctx.fillStyle = \"red\";\n        ctx.translate(at.translation.x, at.translation.y);\n        ctx.rotate(at.rotation);\n        ctx.rect(-(e.properties.size.width * at.scale.x / 2), -(e.properties.size.height * at.scale.y / 2), (e.properties.size.width * at.scale.x), (e.properties.size.height * at.scale.y));\n        ctx.fill();\n        ctx.restore();\n      };\n      return renderFunc;\n    });\n  };\n}","// Functions for editing the scenes of a gamestate\nexport class Scenes {\n\n  static CreateScene = (state: EngineState) => (sceneID: string, setActive?: boolean): EngineState => {\n    let newScene = {\n      uuid: String(sceneID),\n      entities: [],\n    };\n    return {\n      ...state,\n      scenes: state.scenes.concat(newScene),\n      activeScene: setActive === true ? newScene : state.activeScene\n    };\n  };\n\n  static ActivateScene = (state: EngineState) => (sceneID: string): EngineState => {\n    let newScene = state.scenes.find(a => a.uuid === sceneID);\n    if(newScene === undefined){\n      throw new Error('Couldn\\'t find a scene with sceneID: ' + sceneID);\n    }\n    return {\n      ...state,\n      activeScene: newScene\n    };\n  };\n\n  static AddEntityToScene = (state: EngineState) => (sceneID: string) => (\n    e: Entity\n  ): EngineState => {\n    let foundScene = state.scenes.find((a) => a.uuid === sceneID);\n    if (foundScene === undefined) throw new Error(\"No scene could be found with sceneID\" + sceneID);\n    let newState = state;\n    let changedScene: Scene | null = null;\n    newState.scenes = newState.scenes.map((a) => {\n      if (a.uuid !== foundScene?.uuid) return a;\n      changedScene = {\n        ...foundScene,\n        entities: a.entities.concat(e)\n      };\n      return changedScene;\n    });\n    if(changedScene === null) throw new Error(\"No scene could be found with sceneID\" + sceneID);\n    return {\n      ...newState,\n      activeScene: (foundScene.uuid === newState.activeScene?.uuid) ? changedScene : newState.activeScene\n    };\n  };\n\n  static RemoveEntityFromScene = (state: EngineState) => (sceneID: string) => (\n    e: Entity\n  ): EngineState => {\n    let foundScene = state.scenes.find((a) => a.uuid === sceneID);\n    if (foundScene === undefined) throw new Error(\"No scene could be found with sceneID\" + sceneID);\n    let newState = state;\n    let changedScene: Scene | null = null;\n    newState.scenes = newState.scenes.map((a) => {\n      if (a.uuid !== foundScene?.uuid) return a;\n      changedScene = {\n        ...foundScene,\n        entities: a.entities.filter(et => et.uuid !== e.uuid)\n      };\n      return changedScene;\n    });\n    if(changedScene === null) throw new Error(\"No scene could be found with sceneID\" + sceneID);\n    return {\n      ...newState,\n      activeScene: (foundScene.uuid === newState.activeScene?.uuid) ? changedScene : newState.activeScene\n    };\n  };\n}","import { Cameras } from \"./camera\";\nimport { Entities } from \"./entity\";\nimport { Games } from \"./game\";\nimport { Renderers, StyleConversions } from \"./renderers\";\nimport { Scenes } from \"./scene\";\n\nconst Rengine = {\n  Camera: Cameras,\n  Entity: Entities,\n  Game: Games,\n  Renderer: Renderers,\n  Scene: Scenes,\n  StyleConversion: StyleConversions,\n};\n\nexport default Rengine;\n\nexport class Vec2 {\n  static Add = (v1: Vector2) => (v2: Vector2) => { return { x: v1.x + v2.x, y: v1.y + v2.y } };\n  static Sub = (v1: Vector2) => (v2: Vector2) => { return { x: v1.x - v2.x, y: v1.y - v2.y } };\n  static Mul = (v1: Vector2) => (v2: Vector2) => { return { x: v1.x * v2.x, y: v1.y * v2.y } };\n  static Div = (v1: Vector2) => (v2: Vector2) => { return { x: v1.x / v2.x, y: v1.y / v2.y } };\n  static Neg = (v1: Vector2) => { return { x: -v1.x, y: -v1.y } };\n}\n\nexport class Colors {\n  static ColorToString = (c: Color): string => {\n    return \"rgba(\" + c.r + \",\" + c.g + \",\" + c.b + \",\" + c.a + \")\";\n  };\n}\n\nexport class MathUtil {\n  static RotatePositionAboutPoint = (rad: number) => (about: Vector2) => (\n    pos: Vector2\n  ): Vector2 => {\n    let cos = Math.cos(rad),\n      sin = Math.sin(rad),\n      run = about.x - pos.x,\n      rise = about.y - pos.y,\n      cx = cos * run + sin * rise + pos.x,\n      cy = cos * rise - sin * run + pos.y;\n    return {\n      x: cx,\n      y: cy,\n    };\n  };\n}\n","export class AnimationEngine {\n\n  static OffsetAnimationComponent = (xFunc: (x: number, y: number) => number) => (yFunc: (x: number, y: number) => number) => \n  (beforeUpdate?: UpdateFunction) => (afterUpdate?: UpdateFunction): Component => {\n    return {\n      update: (d, e, s, ps) => {\n        if(beforeUpdate){ \n          let [eR, esR] = beforeUpdate(d, e, s, ps);\n          e = eR;\n          ps = esR;\n        }\n        e.properties.position = {\n          x: e.properties.position.x + xFunc(e.properties.position.x, e.properties.position.y),\n          y: e.properties.position.y + yFunc(e.properties.position.x, e.properties.position.y),\n        };\n        if(afterUpdate){ \n          let [eAR, eAsR] = afterUpdate(d, e, s, ps);\n          e = eAR;\n          ps = eAsR;\n        }\n        return [e, ps];\n      }\n    };\n  };\n  \n  static PositionAnimationComponent = (xFunc: (x: number, y: number) => number) => (yFunc: (x: number, y: number) => number) =>\n  (beforeUpdate?: UpdateFunction) => (afterUpdate?: UpdateFunction): Component => {\n    return {\n      update: (d, e, s, ps) => {\n        if(beforeUpdate){ \n          let [eR, esR] = beforeUpdate(d, e, s, ps);\n          e = eR;\n          ps = esR;\n        }\n        e.properties.position = {\n          x: xFunc(e.properties.position.x, e.properties.position.y),\n          y: yFunc(e.properties.position.x, e.properties.position.y),\n        };\n        if(afterUpdate){ \n          let [eAR, eAsR] = afterUpdate(d, e, s, ps);\n          e = eAR;\n          ps = eAsR;\n        }\n        return [e, ps];\n      }\n    };\n  };\n\n}","import { AnimationEngine } from \"./component/animation/engine\";\nimport Rengine, { Vec2 } from \"./engine/engine\";\nimport { EndGameLoop } from \"./Loop\";\n\nexport const init = (canvas?: HTMLCanvasElement): EngineState => {\n  let engineState = Rengine.Game.InitEngine(undefined, canvas);\n  engineState = Rengine.Scene.CreateScene(engineState)('root', true);\n  baseEntity = Rengine.Entity.MakeEntity(\n    {\n      position: { x: 0, y: 0 },\n      size: { width: 50, height: 50 },\n      rotation: 0,\n      scale: { x: 1, y: 1 }\n    },\n    [{\n      update: (delta, e, s, ps) => {\n        let newEnt = e;\n        newEnt.properties.rotation = (newEnt.properties.position.x / 20) % (2 * Math.PI);\n        newEnt.properties.scale = Vec2.Add(newEnt.properties.scale)({x:0.03,y:0.03})\n        return [newEnt, ps];\n      },\n    },\n    AnimationEngine.PositionAnimationComponent\n      ((x,y) => { return x + 2.5 })\n      ((x,y) => { return Math.pow(x / 6, 1.5) })()()\n  ],\n    Rengine.Renderer.BoxRenderer(engineState)({ r: 255, g: 0, b: 0, a: 1 }),\n    []\n  );\n  engineState = Rengine.Scene.AddEntityToScene(engineState)('root')(baseEntity);\n  return engineState;\n}\n\nlet baseEntity: Entity;\n\nlet timePassed = 0;\n\nlet memo = false;\n\nexport const update = (delta: number, es: EngineState): EngineState => {\n  timePassed += delta;\n  if(memo && timePassed > 6000){\n    console.log('ended!');\n    EndGameLoop();\n  }\n  if(memo || timePassed > 3000){\n    memo = true;\n    return Rengine.Scene.RemoveEntityFromScene(es)('root')(baseEntity);\n  }\n  return es;\n}","import Rengine from \"./engine/engine\";\nimport { update } from \"./Lifecycle\";\n\nexport class MessageStream<T> {\n\n  private cbs: Set<(t: T) => any> = new Set();\n\n  listen(cb: (t: T) => any) {\n    this.cbs.add(cb);\n  }\n\n  message(t: T) {\n    this.cbs.forEach(cb => cb(t));\n  }\n\n  unlisten(cb: (t: T) => any) {\n    this.cbs.delete(cb);\n  }\n\n}\n\ntype LOOP_MODE = 'interval' | 'animation';\n\nlet LOOP_MODE: LOOP_MODE = 'animation';\nlet ANIMATION_FRAME: number = -1;\n\nexport const RenderStream: MessageStream<EngineState> = new MessageStream<EngineState>();\n\nexport const FPS_LIMIT = 90;\n\nexport let LAST_UPDATE: number = -1;\nlet FRAMES_SINCE_STARTUP = 0;\nlet CLOCK: NodeJS.Timeout | null = null;\n\nexport const StartGameLoop = ([state, render]: [EngineState, (es: EngineState) => any]) => {\n  let lastState = state;\n  if(LOOP_MODE === 'interval'){\n    if(CLOCK === null){\n      CLOCK = setInterval(() => {\n        lastState = DoFrame([lastState, render]);\n      }, 1000/FPS_LIMIT);\n      lastState = DoFrame([lastState, render]);\n    }\n  } else if (LOOP_MODE === 'animation') {\n    let cb: FrameRequestCallback = () => {\n      let animFrameBefore = ANIMATION_FRAME;\n      lastState = DoFrame([state, render]);\n      let animFrameAfter = ANIMATION_FRAME;\n      if(animFrameAfter === -1 && animFrameBefore !== -1) return;\n      ANIMATION_FRAME = window.requestAnimationFrame(cb);\n    };\n    cb(-1);\n  } else {\n    throw new Error('No such LOOP_MODE called ' + LOOP_MODE + '!');\n  }\n};\n\nexport const EndGameLoop = () => {\n  if(LOOP_MODE === 'interval'){\n    if(CLOCK !== null){\n      clearInterval(CLOCK);\n      CLOCK = null;\n    }\n  } else if (LOOP_MODE === 'animation') {\n    if(ANIMATION_FRAME !== -1){\n      window.cancelAnimationFrame(ANIMATION_FRAME);\n      ANIMATION_FRAME = -1;\n    }\n  } else {\n    throw new Error('No such LOOP_MODE called ' + LOOP_MODE + '!');\n  }\n  LAST_UPDATE = -1;\n  FRAMES_SINCE_STARTUP = 0;\n};\n\nconst DoFrame = ([state, render]: [EngineState, (es: EngineState) => any]): EngineState => {\n  let lastState = state;\n  if(LAST_UPDATE === -1){\n    const currTimeMs = Date.now();\n    const newState = Rengine.Game.TickActiveScene(lastState)(1);\n    const newState2 = update(1, newState);\n    render(newState2);\n    lastState = newState2;\n    LAST_UPDATE = currTimeMs;\n    FRAMES_SINCE_STARTUP = FRAMES_SINCE_STARTUP + 1;\n    return newState2;\n  } else {\n    const currTimeMs = Date.now();\n    if(currTimeMs - LAST_UPDATE < (1000 / FPS_LIMIT)){\n      return lastState;\n    } else {\n      const delta = currTimeMs - LAST_UPDATE;\n      const newState = Rengine.Game.TickActiveScene(lastState)(delta);\n      const newState2 = update(delta, newState);\n      render(newState2);\n      lastState = newState2;\n      LAST_UPDATE = currTimeMs;\n      FRAMES_SINCE_STARTUP = FRAMES_SINCE_STARTUP + 1;\n      return newState2;\n    }\n  }\n}","import React, { useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport { StartGameLoop } from \"./Loop\";\nimport { init } from './Lifecycle';\n\nlet gameStarted: boolean = true;\n\nconst App: React.FunctionComponent = () => {\n  if(gameStarted){\n    return <GameCanvas />;\n  } else {\n    return <p>Game not started!</p>;\n  }\n}\n\nconst canvasStyle: React.CSSProperties = {\n  height: window.innerHeight,\n  width: window.innerWidth,\n  position: \"absolute\",\n  top: 0,\n  left: 0,\n};\n\nconst GameCanvas: React.FunctionComponent = () => {\n  let canvasRef = useRef<HTMLCanvasElement>(null);\n  useEffect(() => {\n    if(canvasRef.current === null){\n      throw new Error('Couldn\\'t find canvasRef!');\n    } else {\n      StartGameLoop([init(canvasRef.current), (es: EngineState) => {\n        const ctx = es.canvas?.getContext('2d');\n        if(!ctx) throw new Error('Cannot get canvas context!');\n        ctx.fillStyle = 'white';\n        ctx.beginPath();\n        ctx.fillRect(0, 0, es.config.width, es.config.height);\n        ctx.stroke();\n        es.activeScene?.entities.forEach((e) => {\n          e.render(e);\n        });\n      }]);\n    }\n  }, [])\n  return <canvas ref={canvasRef} style={canvasStyle} width={window.innerWidth} height={window.innerHeight}/>\n};\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppCanvas from './App';\nimport AppReact from './App-React';\nimport reportWebVitals from './reportWebVitals';\n\ntype RenderingEngineOption = 'canvas' | 'react';\nlet RENDERING_ENGINE = 'canvas';\nconst App = (RENDERING_ENGINE === 'canvas') ? AppCanvas : AppReact;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}